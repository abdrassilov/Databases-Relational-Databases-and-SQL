	-- Question 1 (solved)
	-- Find the titles of all movies directed by Steven Spielberg.

select title from movie where director='Steven Spielberg';

	-- Question 2 (solved)
	-- Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order.

select movie.year, movie.title, rating.stars
from movie
left join rating on rating.mID=movie.mID
where rating.stars='4' or rating.stars='5'
order by year asc;

	-- Question 3 (solved)
	-- Find the titles of all movies that have no ratings.

select movie.title from movie
left join rating on rating.mID=movie.mID
where (select count(movie.mID) from movie where rating.mID=movie.mID) < 1;

	-- Question 4 (solved)
	-- Some reviewers didn't provide a date with their rating. 
    -- Find the names of all reviewers who have ratings with a NULL value for the date.

select distinct name from reviewer
left join rating on reviewer.rID=rating.rID
where ratingDate is null;

	-- Question 5 (solved)
    -- Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. 
    -- Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars.

select Reviewer.name, Movie.title, Rating.stars, Rating.ratingDate
from Rating
inner join Reviewer on Rating.rID=Reviewer.rID
inner join Movie on Rating.mID=Movie.mID
order by Reviewer.name, movie.title, stars;

	-- Question 6 (solved, xx)
	-- For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, 
    -- return the reviewer's name and the title of the movie.

SELECT reviewer.name, movie.title
FROM Movie
INNER JOIN Rating R1 USING(mId)
INNER JOIN Rating R2 USING(rId)
INNER JOIN Reviewer USING(rId)
WHERE R1.mId = R2.mId AND R1.stars < R2.stars AND R1.ratingDate < R2.ratingDate;

	-- Question 7 (solved)
	-- For each movie that has at least one rating, find the highest number of stars that movie received. 
	-- Return the movie title and number of stars. Sort by movie title.

select distinct movie.title, 
(
select max(rating.stars) from rating 
where
rating.stars is not NULL
and
rating.mID=movie.mID
)
from movie
inner join rating on Movie.mID = Rating.mID
order by movie.title;

-- Question 8 (solved)
-- For each movie, return the title and the 'rating spread', that is, 
-- the difference between highest and lowest ratings given to that movie. 
-- Sort by rating spread from highest to lowest, then by movie title.

select distinct movie.title, 
(
select max(rating.stars)-min(rating.stars) from rating
where rating.mID=movie.mID
) as rating_spread
from movie
inner join rating on Movie.mID = Rating.mID
order by rating_spread desc, movie.title;

-- Question 9 (solved)

-- Find the difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. 
-- (Make sure to calculate the average rating for each movie, then the average of those averages for movies before 1980 and movies after. 
-- Don't just calculate the overall average rating before and after 1980.)

select 
avg(average_before.avgb) - avg(average_after.avga) from
(
select avg(rating.stars) as avgb
from movie
inner join rating using(mID) where movie.year<1980
group by mID
) as average_before,
(
select avg(rating.stars) as avga
from movie
inner join rating using(mID) where movie.year>1980
group by mID
) as average_after
